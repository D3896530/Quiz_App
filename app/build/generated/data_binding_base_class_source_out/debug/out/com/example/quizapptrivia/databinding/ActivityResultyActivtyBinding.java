// Generated by view binder compiler. Do not edit!
package com.example.quizapptrivia.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.quizapptrivia.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.eazegraph.lib.charts.PieChart;

public final class ActivityResultyActivtyBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final TextView Total;

  @NonNull
  public final CardView cardViewGraph;

  @NonNull
  public final TextView correct;

  @NonNull
  public final CardView details;

  @NonNull
  public final AppCompatButton homeresult;

  @NonNull
  public final TextView incoorect;

  @NonNull
  public final PieChart piechart;

  @NonNull
  public final TextView skipped;

  private ActivityResultyActivtyBinding(@NonNull LinearLayout rootView, @NonNull TextView Total,
      @NonNull CardView cardViewGraph, @NonNull TextView correct, @NonNull CardView details,
      @NonNull AppCompatButton homeresult, @NonNull TextView incoorect, @NonNull PieChart piechart,
      @NonNull TextView skipped) {
    this.rootView = rootView;
    this.Total = Total;
    this.cardViewGraph = cardViewGraph;
    this.correct = correct;
    this.details = details;
    this.homeresult = homeresult;
    this.incoorect = incoorect;
    this.piechart = piechart;
    this.skipped = skipped;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityResultyActivtyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityResultyActivtyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_resulty_activty, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityResultyActivtyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.Total;
      TextView Total = ViewBindings.findChildViewById(rootView, id);
      if (Total == null) {
        break missingId;
      }

      id = R.id.cardViewGraph;
      CardView cardViewGraph = ViewBindings.findChildViewById(rootView, id);
      if (cardViewGraph == null) {
        break missingId;
      }

      id = R.id.correct;
      TextView correct = ViewBindings.findChildViewById(rootView, id);
      if (correct == null) {
        break missingId;
      }

      id = R.id.details;
      CardView details = ViewBindings.findChildViewById(rootView, id);
      if (details == null) {
        break missingId;
      }

      id = R.id.homeresult;
      AppCompatButton homeresult = ViewBindings.findChildViewById(rootView, id);
      if (homeresult == null) {
        break missingId;
      }

      id = R.id.incoorect;
      TextView incoorect = ViewBindings.findChildViewById(rootView, id);
      if (incoorect == null) {
        break missingId;
      }

      id = R.id.piechart;
      PieChart piechart = ViewBindings.findChildViewById(rootView, id);
      if (piechart == null) {
        break missingId;
      }

      id = R.id.skipped;
      TextView skipped = ViewBindings.findChildViewById(rootView, id);
      if (skipped == null) {
        break missingId;
      }

      return new ActivityResultyActivtyBinding((LinearLayout) rootView, Total, cardViewGraph,
          correct, details, homeresult, incoorect, piechart, skipped);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
